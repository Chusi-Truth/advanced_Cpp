cmake_minimum_required(VERSION 3.12)
project(DemoProject LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# 包含头文件路径，指向hw_proj里的include
include_directories(${CMAKE_SOURCE_DIR}/../hw_proj/include)

# 收集源文件
file(GLOB_RECURSE SOURCES ${CMAKE_SOURCE_DIR}/../hw_proj/src/*.cpp)

# 定义调试模式选项，默认OFF
option(DEBUG_MODE "Enable debug mode" OFF)

# 添加可执行文件
add_executable(run ${SOURCES})

# 添加编译选项
target_compile_options(run PRIVATE
    -ftemplate-depth=11000
    -ftemplate-backtrace-limit=0
)

if(MSVC)
    # MSVC 特定的编译选项
    target_compile_options(run PRIVATE
        /bigobj
    )
else()
    # GCC/Clang 特定的编译选项
    target_compile_options(run PRIVATE
        -ftemplate-depth=11000
        -ftemplate-backtrace-limit=0
    )
endif()

# 根据调试模式选项添加编译定义
if(DEBUG_MODE)
    target_compile_definitions(run PRIVATE DEBUG_MODEL)
endif()

# 打印编译平台信息
if(WIN32)
    message(STATUS "Building on Windows")
elseif(UNIX)
    message(STATUS "Building on Linux")
endif()

# 设置输出目录
set_target_properties(run PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin
)

# 打印构建信息
message(STATUS "源文件数量: ${SOURCES}")
message(STATUS "生成可执行文件: run")