cmake_minimum_required(VERSION 3.12)
project(DemoProject LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# 添加选项：调试模式
option(DEBUG_MODE "Enable debug output" OFF)

# 检测操作系统并打印信息
if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
    message(STATUS "编译环境: Windows")
elseif(CMAKE_SYSTEM_NAME STREQUAL "Linux")
    message(STATUS "编译环境: Linux")
else()
    message(STATUS "编译环境: ${CMAKE_SYSTEM_NAME}")
endif()

# 这里改为相对路径指向 hw_proj 里的 include 和 src
include_directories(${CMAKE_SOURCE_DIR}/../hw_proj/include)

file(GLOB_RECURSE SOURCES ${CMAKE_SOURCE_DIR}/../hw_proj/src/*.cpp)

add_executable(run ${SOURCES})

# 根据调试模式设置编译定义
if(DEBUG_MODE)
    message(STATUS "构建模式: DEBUG (启用调试输出)")
    target_compile_definitions(run PRIVATE DEBUG_MODE)
else()
    message(STATUS "构建模式: RELEASE (禁用调试输出)")
endif()

target_compile_options(run PRIVATE
    -ftemplate-depth=11000
    -ftemplate-backtrace-limit=0
)

set_target_properties(run PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin
)


message(STATUS "源文件数量: ${SOURCES}")
message(STATUS "生成可执行文件: run")
