cmake_minimum_required(VERSION 3.12)
project(DemoProject LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# 这里改为相对路径指向 hw_proj 里的 include 和 src
include_directories(${CMAKE_SOURCE_DIR}/../hw_proj/include)

file(GLOB_RECURSE SOURCES ${CMAKE_SOURCE_DIR}/../hw_proj/src/*.cpp)

add_executable(run ${SOURCES})

target_compile_options(run PRIVATE
    -ftemplate-depth=11000
    -ftemplate-backtrace-limit=0
)

# ----------todo: 调试模式以及编译提示
option(BUILD_TYPE "Debug or Release" "Debug")
set_property(CACHE BUILD_TYPE PROPERTY STRINGS "Debug" "Release")
if(BUILD_TYPE STREQUAL "Debug")
	message(STATUS "Debug mode")
	target_compile_definitions(run PRIVATE DEBUG_MODE ANALYZE_DEBUG)
	target_compile_definitions(run PRIVATE DEBUG_MODE)
	set(ANALYZE_FILE "${CMAKE_SOURCE_DIR}/../hw_proj/src/analyze.cpp")
	if(EXISTS ${ANALYZE_FILE})
		message(STATUS "analyze.cpp 路径: ${ANALYZE_FILE}")
		file(SIZE ${ANALYZE_FILE} ANALYZE_FILE_SIZE)
		message(STATUS "analyze.cpp 文件大小: ${ANALYZE_FILE_SIZE} 字节")
		file(TIMESTAMP ${ANALYZE_FILE} ANALYZE_FILE_TIMESTAMP)
		message(STATUS "analyze.cpp 最后修改时间: ${ANALYZE_FILE_TIMESTAMP}")
		message(STATUS "已打开 analyze.cpp 调试信息")
	else()
        	message(WARNING "未找到 analyze.cpp: ${ANALYZE_FILE}")
    	endif()
elseif(BUILD_TYPE STREQUAL "Release")
	message(STATUS "Release mode")
	target_compile_definitions(run PRIVATE RELEASE_MODE)
endif()

if(WIN32)
	message(STATUS "Building on Windows")
elseif(UNIX)
	message(STATUS "Building on Unix/Linux")
endif()
# ----------

set_target_properties(run PROPERTIES
	RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin
)

message(STATUS "源文件数量: ${SOURCES}")
message(STATUS "生成可执行文件: run")
